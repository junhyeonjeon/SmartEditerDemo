/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2014-11-15 03:31:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.src;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"//code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/src/smarteditor/js/HuskyEZCreator.js\" charset=\"utf-8\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<form action=\"send.jsp\" method=\"post\" id=\"frm\">\r\n");
      out.write("\t\t<textarea name=\"smarteditor\" id=\"smarteditor\" rows=\"10\" cols=\"100\" style=\"width: 766px; height: 412px;\"></textarea>\r\n");
      out.write("\t\t<input type=\"button\" id=\"savebutton\" value=\"서버전송\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t//전역변수선언\r\n");
      out.write("\t\t\tvar editor_object = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tnhn.husky.EZCreator.createInIFrame({\r\n");
      out.write("\t\t\t\toAppRef : editor_object, elPlaceHolder : \"smarteditor\",\tsSkinURI : \"");
      out.print(request.getContextPath());
      out.write("/src/smarteditor/SmartEditor2Skin.html\", htParams : {\r\n");
      out.write("\t\t\t\t\t// 툴바 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("\t\t\t\t\tbUseToolbar : true,\r\n");
      out.write("\t\t\t\t\t// 입력창 크기 조절바 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("\t\t\t\t\tbUseVerticalResizer : true,\r\n");
      out.write("\t\t\t\t\t// 모드 탭(Editor | HTML | TEXT) 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("\t\t\t\t\tbUseModeChanger : true,\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t//전송버튼 클릭이벤트\r\n");
      out.write("\t\t\t$(\"#savebutton\").click(\r\n");
      out.write("\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t//id가 smarteditor인 textarea에 에디터에서 대입\r\n");
      out.write("\t\t\t\t\t\teditor_object.getById[\"smarteditor\"].exec(\"UPDATE_CONTENTS_FIELD\", []);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 이부분에 에디터 validation 검증\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t//폼 submit\r\n");
      out.write("\t\t\t\t\t\t$(\"#frm\").submit();\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
